// Конструктор
//
// Number()
//     Создает новое числовое значение.
//
// Статические свойства
//
// Number.EPSILON
//      Наименьший интервал между двумя представимыми числами.
// Number.MAX_SAFE_INTEGER
//      Максимальное безопасное целое число в JavaScript (2 ^ 53-1).
// Number.MAX_VALUE
//      Наибольшее положительное представимое число.
// Number.MIN_SAFE_INTEGER
//      Минимальное безопасное целое число в JavaScript (- (2 ^ 53-1)).
// Number.MIN_VALUE
//      Наименьшее положительное представимое число, то есть положительное число,
//      наиболее близкое к нулю (не являющееся фактически нулем).
// Number.NaN
//      Специальное значение «Не число».
// Number.NEGATIVE_INFINITY
//      Специальное значение, представляющее отрицательную бесконечность. Вернул при переполнении.
// Number.POSITIVE_INFINITY
//      Специальное значение, представляющее бесконечность. Вернул при переполнении.
// Number.prototype
//      Позволяет добавлять свойства к объекту Number.
//
// Статические методы
//
// Number.isNaN ()
//     Определите, является ли переданное значение NaN.
// Number.isFinite ()
//     Определите, является ли переданное значение конечным числом.
// Number.isInteger ()
//     Определите, является ли переданное значение целым числом.
// Number.isSafeInteger ()
//     Определите, является ли переданное значение безопасным целым числом
//     (число от - (2 ^ 53-1) до 2 ^ 53-1).
// Number.parseFloat (строка)
//     Это то же самое, что и глобальная функция parseFloat ().
// Number.parseInt (строка; [основание системы счисления])
//     Это то же самое, что и глобальная функция parseInt ().
//
// Методы экземпляра
//
// Number.prototype.toExponential (FractionDigits)
//     Возвращает строку, представляющую число в экспоненциальной записи.
// Number.prototype.toFixed (цифры)
//     Возвращает строку, представляющую число в нотации с фиксированной точкой.
// Number.prototype.toLocaleString ([языковые стандарты [, параметры]])
//     Возвращает строку с чувствительным к языку представлением этого числа.
//     Переопределяет метод Object.prototype.toLocaleString ().
// Number.prototype.toPrecision (точность)
//     Возвращает строку, представляющую число с указанной точностью в виде с
//     фиксированной запятой или экспоненциальной нотации.
// Number.prototype.toString ([основание системы счисления])
//     Возвращает строку, представляющую указанный объект в указанной системе счисления («основание»).
//     Переопределяет метод Object.prototype.toString ().
// Number.prototype.valueOf ()
//     Возвращает примитивное значение указанного объекта. Переопределяет метод Object.prototype.valueOf ().